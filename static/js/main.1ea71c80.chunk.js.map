{"version":3,"sources":["OutsideToastsComponent.js","ContextToastsComponent.js","toastsSlice.js","ReduxToastsComponent.js","App.js","store.js","index.js"],"names":["OutsideToastsComponent","useState","ids","setIds","toastList","map","id","onClick","e","stopPropagation","filter","el","ReactDOM","createPortal","Date","getTime","document","querySelector","ToastsContext","createContext","toasts","addToast","removeToast","toastsVisible","useToastsContext","useContext","AddToast","ToastList","toast","ContextToastsComponent","toastsSlice","createSlice","name","initialState","list","reducers","toggleToasts","state","push","payload","actions","toastsReducer","reducer","ReduxToastsComponent","dispatch","useDispatch","useSelector","App","setToastsVisible","contextToastsVisible","setContextToastsVisible","contextToasts","setContextToasts","alert","Provider","value","store","configureStore","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ea71c80.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport ReactDOM from 'react-dom';\r\n\r\nexport const OutsideToastsComponent = () => {\r\n  const [ids, setIds] = useState([]);\r\n  const onAddClick = e => {\r\n    e.stopPropagation();\r\n    setIds(ids => [...ids, new Date().getTime()]);\r\n  };\r\n\r\n  const toastList = ids.map(id => (\r\n    <div key={id}>\r\n      Toast with id: {id}\r\n      <br />\r\n      <button\r\n        onClick={e => {\r\n          e.stopPropagation();\r\n          setIds(ids => ids.filter(el => el !== id));\r\n        }}\r\n      >\r\n        Remove me\r\n      </button>\r\n    </div>\r\n  ));\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <br />\r\n      <button onClick={onAddClick}>\r\n        Add toast\r\n      </button>\r\n      {toastList}\r\n    </>,\r\n    document.querySelector('#outside-root'),\r\n  );\r\n};\r\n","import React, {createContext, useContext} from \"react\";\r\n\r\nexport const ToastsContext = createContext({\r\n  // default values\r\n  toasts: [],\r\n  addToast: () => {},\r\n  removeToast: el => {},\r\n  toastsVisible: false,\r\n});\r\n\r\nconst useToastsContext = () => useContext(ToastsContext);\r\n\r\nconst AddToast = () => {\r\n  const {addToast} = useToastsContext();\r\n\r\n  return <button onClick={addToast}>Add toast</button>;\r\n}\r\n\r\nconst ToastList = () => {\r\n  const {toasts, toastsVisible, removeToast} = useToastsContext();\r\n\r\n  if (!toastsVisible) {\r\n    return null;\r\n  }\r\n  return toasts.map(toast => (\r\n    <div key={toast}>\r\n      Toast with id: {toast}\r\n      <br />\r\n      <button onClick={() => removeToast(toast)}>Remove me</button>\r\n    </div>\r\n  ))\r\n}\r\n\r\nexport const ContextToastsComponent = () => (\r\n  <>\r\n    <br />\r\n    <AddToast />\r\n    <ToastList />\r\n  </>\r\n)\r\n\r\n","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n  toastsVisible: false,\n  list: [],\n};\n\nexport const toastsSlice = createSlice({\n  name: 'toasts',\n  initialState,\n  reducers: {\n    toggleToasts: state => {\n      state.toastsVisible = !state.toastsVisible;\n    },\n    addToast: state => {\n      state.list.push(new Date().getTime());\n    },\n    removeToast: (state, {payload}) => {\n      state.list = state.list.filter(toast => toast !== payload);\n    },\n  },\n});\n\nexport const { toggleToasts, addToast, removeToast } = toastsSlice.actions;\n\nexport const toastsReducer = toastsSlice.reducer;\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addToast, removeToast, toggleToasts} from \"./toastsSlice\";\r\n\r\nexport const ReduxToastsComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const toasts = useSelector(state => state.toasts.list);\r\n\r\n  return (\r\n    <>\r\n      <button onClick={() => dispatch(toggleToasts())}>\r\n        Show toasts\r\n      </button>\r\n      <br />\r\n      <button onClick={() => dispatch(addToast(new Date().getTime()))}>\r\n        Add toast\r\n      </button>\r\n      <br />\r\n      {\r\n        toasts.map(toast => (\r\n          <div key={toast}>\r\n            Toast with id: {toast}\r\n            <br />\r\n            <button onClick={() => dispatch(removeToast(toast))}>Remove me</button>\r\n          </div>\r\n        ))\r\n      }\r\n    </>\r\n  )\r\n};\r\n\r\n","import React, {useState} from 'react';\nimport {OutsideToastsComponent} from \"./OutsideToastsComponent\";\nimport {ContextToastsComponent, ToastsContext} from \"./ContextToastsComponent\";\nimport {ReduxToastsComponent} from \"./ReduxToastsComponent\";\n\n\nfunction App() {\n  const [toastsVisible, setToastsVisible] = useState(false);\n\n  const [contextToastsVisible, setContextToastsVisible] = useState(false);\n  const [contextToasts, setContextToasts] = useState([]);\n\n\n  return (\n    <div>\n      <h2>Inside React app</h2>\n      <button onClick={e => {\n        e.stopPropagation();\n        setToastsVisible(toastsVisible => !toastsVisible);\n      }}>\n        {toastsVisible? 'Hide' : 'Show'} toasts\n      </button>\n      {toastsVisible && (\n        <div\n          onClick={() => alert('I was clicked! Even from outside my DOM which means event propagates properly')}>\n          <OutsideToastsComponent />\n        </div>\n      )}\n      <h3>\n        Context toasts\n      </h3>\n      <button onClick={e => {\n        e.stopPropagation();\n        setContextToastsVisible(contextToastsVisible => !contextToastsVisible);\n      }}>\n        {contextToastsVisible? 'Hide' : 'Show'} toasts\n      </button>\n      <ToastsContext.Provider value={{\n        toasts: contextToasts,\n        addToast: () => setContextToasts(toasts => [...toasts, new Date().getTime()]),\n        toastsVisible: contextToastsVisible,\n        removeToast: (id) => setContextToasts(toasts => toasts.filter(toast => toast !== id))\n      }}>\n        <ContextToastsComponent />\n      </ToastsContext.Provider>\n      <h3>\n        Redux toasts\n      </h3>\n      <ReduxToastsComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport {toastsReducer} from './toastsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    toasts: toastsReducer,\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}